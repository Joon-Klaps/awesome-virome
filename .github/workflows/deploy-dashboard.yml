name: Deploy Dashboard

on:
  push:
    branches:
      - main
    paths:
      - 'README.md'
      - 'index.html'
      - 'styles.css'
      - 'visualization.js'
      - 'generate_data.js'
      - 'build.js'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build
        run: |
          # Generate data.json and log its content
          echo "Generating data.json..."
          node generate_data.js > data.json
          
          # Check if data.json was generated successfully
          if [ -s data.json ]; then
            echo "✅ data.json created successfully ($(wc -c < data.json) bytes)"
            # Preview first part of the data
            head -c 300 data.json
            echo "..."
          else
            echo "❌ ERROR: data.json is empty or wasn't created"
            exit 1
          fi
          
          # Run the build script with detailed logging
          echo "Running build script..."
          node build.js
          
          # Verify that the data was properly embedded in the output HTML file
          echo "Verifying data embedding..."
          if grep -q "<!-- DATA_PLACEHOLDER -->" dist/index.html; then
            echo "❌ ERROR: Data placeholder was not replaced in dist/index.html"
            # Show the context around the placeholder for debugging
            grep -A 5 -B 5 "DATA_PLACEHOLDER" dist/index.html
            exit 1
          else
            echo "✅ SUCCESS: Data placeholder was properly replaced in dist/index.html"
            
            # Check for valid JSON in the script tag
            echo "Validating embedded JSON..."
            # Extract JSON from the script tag and check if it's valid
            json_content=$(grep -ozP '(?<=<script id="embedded-data" type="application/json">).*?(?=</script>)' dist/index.html | tr -d '\0')
            if [ -z "$json_content" ]; then
              echo "❌ ERROR: No content found in embedded-data script tag"
              exit 1
            else
              echo "✅ Found content in embedded-data script tag (${#json_content} characters)"
            fi
          fi
          
          # Copy data.json to dist for fallback loading
          echo "Copying data.json to dist directory for fallback loading..."
          cp data.json dist/
          echo "✅ data.json copied to dist/"
          
          # List dist directory to confirm files
          echo "Files in dist directory:"
          ls -la dist/

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: dist
