name: PubMed Citations Collection

on:
  schedule:
    # Run weekly on Saturday at 04:00 UTC (after cache warming at 01:00)
    - cron: "0 4 * * 6"
    # Run monthly on 4th of the month at 10:00 UTC (after cache warming)
    - cron: "0 10 4 * *"
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh of all citation data'
        required: false
        default: false
        type: boolean
      trigger_academic_impact:
        description: 'Trigger academic impact workflow after completion'
        required: false
        default: true
        type: boolean

# Permissions needed for creating and managing PRs
permissions:
  contents: write
  pull-requests: write

jobs:
  warm-cache-for-pubmed:
    uses: ./.github/workflows/cache-warming.yml
    with:
      scope: 'important'
    secrets: inherit

  collect-pubmed-citations:
    needs: warm-cache-for-pubmed
    runs-on: ubuntu-latest
    outputs:
      pubmed_data_updated: ${{ steps.commit.outputs.changes_detected }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all history for proper branch creation
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyGithub pyyaml
      
      - name: Setup GitHub CLI
        run: |
          type -p curl >/dev/null || (apt update && apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
      
      - name: Monitor cache status before collection
        run: |
          python scripts/monitor_cache.py --summary > cache_before.txt
      
      - name: Collect PubMed citation data
        run: python scripts/pubmed_citations.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NCBI_API_KEY: ${{ secrets.NCBI_API_KEY }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
      
      - name: Monitor cache status after collection
        run: |
          python scripts/monitor_cache.py --summary > cache_after.txt
      
      - name: Validate data integrity
        run: |
          python scripts/verify_repo_metadata.py
          python scripts/verify_readme_content.py
      
      - name: Update overall data.json with citation info
        run: python update_data_json.py --include-metadata --include-pubmed
      
      - name: Generate summary report
        run: |
          echo "# PubMed Citations Collection Report" > pubmed_report.md
          echo "Run completed at: $(date)" >> pubmed_report.md
          echo "\n## Collection Summary" >> pubmed_report.md
          jq '.' metadata/pubmed_citations/summary.json >> pubmed_report.md
          echo "\n## Cache Impact" >> pubmed_report.md
          echo "### Before collection:" >> pubmed_report.md
          cat cache_before.txt >> pubmed_report.md
          echo "\n### After collection:" >> pubmed_report.md
          cat cache_after.txt >> pubmed_report.md
      
      - name: Upload report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pubmed-citations-report
          path: |
            pubmed_report.md
            pubmed_citations.log
      
      - name: Create Pull Request for changes
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data.json metadata/ citations.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            # Create a unique branch name with timestamp
            BRANCH_NAME="pubmed-update-$(date +%Y%m%d-%H%M%S)"
            git checkout -b $BRANCH_NAME
            
            # Commit changes to the new branch
            git commit -m "Update PubMed citation information"
            git push --set-upstream origin $BRANCH_NAME
            
            # Create a pull request using GitHub CLI
            PR_URL=$(gh pr create --title "Update PubMed Citation Information" \
              --body "This PR updates PubMed citation data for tools in the repository. This PR was automatically generated by the PubMed Citations workflow." \
              --base main \
              --head $BRANCH_NAME)
            
            # Get PR number from URL
            PR_NUMBER=$(echo $PR_URL | awk -F'/' '{print $NF}')
            
            # Try to enable auto-merge (this might fail if auto-merge is not enabled in the repo)
            gh pr merge $PR_NUMBER --auto --merge || echo "Auto-merge could not be enabled. PR will need manual approval."
            
            echo "::notice::Created PR: $PR_URL"
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  trigger-academic-impact:
    needs: collect-pubmed-citations
    if: |
      needs.collect-pubmed-citations.outputs.changes_detected == 'true' &&
      ((github.event_name == 'workflow_dispatch' && github.event.inputs.trigger_academic_impact == 'true') ||
      (github.event_name == 'schedule' && github.event.schedule == '0 12 4 * *'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger academic impact workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-repos.yml
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: '{"update_type": "academic_impact"}'
          
      - name: Add comment to PR
        if: needs.collect-pubmed-citations.outputs.pr_number != ''
        run: |
          gh pr comment ${{ needs.collect-pubmed-citations.outputs.pr_number }} --body "Triggered the Academic Impact workflow to update repository data based on the new citation information."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}